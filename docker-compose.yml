services:
  config-server:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: config-server
    build:
      context: .
      dockerfile: services/config-server/Dockerfile
    ports:
      - "8888:8888"
    networks:
      - net

  eureka-server:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: eureka-server
    build:
      context: .
      dockerfile: services/eureka-server/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - net
    depends_on:
      config-server:
        condition: service_healthy

  gateway-service:
    container_name: gateway-service
    build:
      context: .
      dockerfile: services/gateway-service/Dockerfile
    ports:
      - "8090:8090"
    networks:
      - net
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy

  document-service:
    container_name: document-service
    build:
      context: .
      dockerfile: services/document-service/Dockerfile
    ports:
      - "8091:8091"
    networks:
      - net
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-database:5432/parse_ai_db
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}

  storage-service:
    container_name: storage-service
    build:
      context: .
      dockerfile: services/storage-service/Dockerfile
    ports:
      - "8092:8092"
    networks:
      - net
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      - CLOUDINARY_NAME=${CLOUDINARY_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}

  postgres-database:
    container_name: postgres-database
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: parse_ai_db
    ports:
      - "5432:5432"
    networks:
      - net

networks:
  net:
    driver: bridge
